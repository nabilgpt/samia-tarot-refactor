{
  "name": "samia-tarot-api",
  "version": "1.0.0",
  "description": "Complete backend API for SAMIA TAROT platform",
  "type": "module",
  "main": "src/api/index.js",
  "scripts": {
    "dev": "concurrently \"npm run backend\" \"npm run frontend\"",
    "frontend": "vite",
    "backend": "node -r dotenv/config src/api/index.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src --ext .js,.jsx --fix",
    "lint:check": "eslint src --ext .js,.jsx",
    "build": "cd src && npm run build",
    "server:restart": "node scripts/server-manager.js restart",
    "server:kill": "node scripts/server-manager.js kill",
    "server:start": "node scripts/server-manager.js start",
    "server:health": "node scripts/server-manager.js health",
    "server:restart:migration": "node scripts/server-manager.js restart \"Database migration\" \"System\"",
    "server:restart:language": "node scripts/server-manager.js restart \"Language system update\" \"System\"",
    "server:restart:deployment": "node scripts/server-manager.js restart \"Production deployment\" \"CI/CD\"",
    "deploy:dev": "npm run server:kill && npm run migrate && npm run server:restart:deployment",
    "deploy:staging": "npm run lint:check && npm run test && npm run migrate && npm run server:restart:deployment",
    "deploy:prod": "npm run lint:check && npm run test && npm run migrate && npm run theme:protect && npm run server:restart:deployment",
    "migrate": "node scripts/database-migrator.js",
    "migrate:rollback": "node scripts/database-migrator.js rollback",
    "migrate:fresh": "npm run server:kill && node scripts/database-migrator.js fresh && npm run server:restart:migration",
    "language:add": "node scripts/language-manager.js add",
    "language:update": "node scripts/language-manager.js update",
    "language:sync": "npm run server:kill && node scripts/language-manager.js sync && npm run server:restart:language",
    "theme:protect": "node scripts/theme-protector.js",
    "theme:validate": "node scripts/theme-protector.js validate",
    "audit:deployment": "node scripts/audit-logger.js deployment",
    "audit:report": "node scripts/audit-logger.js report",
    "ci:prepare": "npm install && npm run lint:check && npm run test",
    "ci:performance": "npm run lighthouse:ci && npm run performance:budget",
    "ci:deploy": "npm run ci:prepare && npm run ci:performance && npm run deploy:prod",
    "emergency:kill": "npm run server:kill",
    "emergency:restore": "npm run migrate:rollback && npm run server:restart \"Emergency restore\" \"Emergency\"",
    "logs:server": "tail -f logs/server-management.log",
    "logs:deployment": "tail -f logs/deployment-audit.log",
    "logs:clear": "rm -rf logs/*.log",
    "lighthouse:ci": "lhci autorun",
    "lighthouse:collect": "lhci collect",
    "lighthouse:assert": "lhci assert",
    "lighthouse:upload": "lhci upload",
    "performance:test": "npm run lighthouse:ci",
    "performance:report": "node scripts/performance-reporter.js",
    "performance:budget": "node scripts/performance-budget-check.js",
    "performance:cwv": "python cwv_synthetic_monitors.py",
    "performance:validate": "python validate_cwv_targets.py",
    "performance:full": "npm run performance:cwv && npm run lighthouse:ci && npm run performance:budget && npm run performance:report && npm run performance:validate",
    "mobile:init": "npx cap init",
    "mobile:add:android": "npx cap add android",
    "mobile:add:ios": "npx cap add ios",
    "mobile:build": "npm run build && npx cap sync",
    "mobile:android:build": "npx cap build android",
    "mobile:ios:build": "npx cap build ios",
    "mobile:android:run": "npx cap run android",
    "mobile:ios:run": "npx cap run ios"
  },
  "dependencies": {
    "@emailjs/browser": "^4.4.1",
    "@sentry/browser": "^8.0.0",
    "@sentry/react": "^8.55.0",
    "@sentry/tracing": "^7.120.3",
    "@stripe/react-stripe-js": "^2.8.2",
    "@stripe/stripe-js": "^4.8.0",
    "@supabase/supabase-js": "^2.58.0",
    "@testing-library/dom": "^9.3.4",
    "@vitejs/plugin-react": "^4.5.1",
    "bcryptjs": "^2.4.3",
    "clsx": "^2.1.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "decimal.js": "^10.4.3",
    "dotenv": "^16.5.0",
    "express": "^4.18.2",
    "express-rate-limit": "^6.11.2",
    "express-validator": "^7.2.1",
    "framer-motion": "^11.11.17",
    "helmet": "^7.2.0",
    "i18next": "^25.2.1",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.454.0",
    "moment-timezone": "^0.5.43",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^4.1.1",
    "nodemailer": "^6.9.7",
    "openai": "^4.24.1",
    "pg": "^8.16.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-error-boundary": "^6.0.0",
    "react-google-recaptcha": "^3.1.0",
    "react-hot-toast": "^2.5.2",
    "react-i18next": "^15.5.2",
    "react-icons": "^5.5.0",
    "react-router-dom": "^6.28.0",
    "react-select": "^5.8.3",
    "react-toastify": "^11.0.5",
    "react-tsparticles": "^2.12.2",
    "recharts": "^2.15.3",
    "redis": "^4.6.10",
    "sharp": "^0.32.6",
    "socket.io": "^4.7.4",
    "socket.io-client": "^4.8.1",
    "square": "^43.0.0",
    "stripe": "^13.11.0",
    "tailwind-merge": "^3.3.1",
    "tsparticles-slim": "^2.12.0",
    "twilio": "^4.19.0",
    "uuid": "^9.0.1",
    "validator": "^13.11.0",
    "vite": "^5.4.10",
    "web-vitals": "^4.2.4",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/preset-env": "^7.26.0",
    "@babel/preset-react": "^7.25.9",
    "@capacitor/android": "^6.1.0",
    "@capacitor/cli": "^6.1.0",
    "@capacitor/core": "^6.1.0",
    "@capacitor/ios": "^6.1.0",
    "@eslint/js": "^9.13.0",
    "@lhci/cli": "^0.13.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.0.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "@vitejs/plugin-react": "^4.3.3",
    "autoprefixer": "^10.4.21",
    "axios": "^1.7.8",
    "babel-jest": "^29.7.0",
    "concurrently": "^9.2.0",
    "eslint": "^9.13.0",
    "eslint-config-node": "^4.1.0",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.14",
    "globals": "^15.11.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-transform-stub": "^2.0.0",
    "jsdom": "^26.1.0",
    "nodemon": "^3.0.1",
    "postcss": "^8.5.4",
    "supertest": "^6.3.3",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "tailwindcss": "^3.4.17",
    "vitest": "^3.2.2",
    "webpack-bundle-analyzer": "^4.9.0"
  },
  "keywords": [
    "tarot",
    "api",
    "node.js",
    "express",
    "supabase",
    "payments",
    "booking",
    "chat"
  ],
  "author": "SAMIA TAROT Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/samia-tarot/backend"
  },
  "python-dependencies": {
    "b2sdk": "latest",
    "cryptography": "latest"
  }
}
