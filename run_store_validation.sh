#!/bin/bash
# Store Validation Pipeline - Post-Deployment Health Checks
# Run after TestFlight/Play Internal deployment to validate mobile readiness

set -e

echo "🚀 SAMIA-TAROT Store Deployment Validation Pipeline"
echo "=================================================="

# Configuration
ENVIRONMENTS=("staging" "production")
REQUIRED_HEALTH_SCORE=85
VALIDATION_PASSED=true

# Function to run validation suite
run_validation_suite() {
    local env=$1
    echo ""
    echo "🔍 Validating $env environment..."
    echo "--------------------------------"
    
    # Run synthetic probes
    python3 synthetic_probes.py "$env"
    probe_exit_code=$?
    
    # Run security hardening tests (if local/staging)
    if [ "$env" != "production" ]; then
        echo ""
        echo "🔒 Running security hardening tests..."
        python3 test_security_hardening.py
        security_exit_code=$?
    else
        security_exit_code=0
    fi
    
    # Run TikTok rejection tests
    echo ""
    echo "🚫 Running TikTok rejection validation..."
    python3 test_tiktok_rejection.py
    tiktok_exit_code=$?
    
    # Check overall results
    if [ $probe_exit_code -ne 0 ] || [ $security_exit_code -ne 0 ] || [ $tiktok_exit_code -ne 0 ]; then
        echo "❌ Validation FAILED for $env"
        VALIDATION_PASSED=false
        return 1
    else
        echo "✅ Validation PASSED for $env"
        return 0
    fi
}

# Function to validate privacy manifest
validate_privacy_compliance() {
    echo ""
    echo "🔒 Validating privacy manifest compliance..."
    echo "-------------------------------------------"
    
    python3 validate_privacy_manifest.py
    privacy_exit_code=$?
    
    if [ $privacy_exit_code -ne 0 ]; then
        echo "❌ Privacy manifest validation FAILED"
        VALIDATION_PASSED=false
        return 1
    else
        echo "✅ Privacy manifest validation PASSED"
        return 0
    fi
}

# Main validation pipeline
main() {
    echo "📋 Pre-flight checks..."
    
    # Check required files exist
    required_files=(
        "synthetic_probes.py"
        "test_security_hardening.py" 
        "test_tiktok_rejection.py"
        "validate_privacy_manifest.py"
        "ios/PrivacyInfo.xcprivacy"
    )
    
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            echo "❌ Required file missing: $file"
            exit 1
        fi
    done
    
    echo "✅ All required files present"
    
    # Run privacy validation (local check)
    validate_privacy_compliance
    
    # Run environment validations
    for env in "${ENVIRONMENTS[@]}"; do
        run_validation_suite "$env"
    done
    
    echo ""
    echo "=================================================="
    
    if [ "$VALIDATION_PASSED" = true ]; then
        echo "✅ STORE DEPLOYMENT VALIDATION PASSED"
        echo "📱 Ready for TestFlight Beta → Production promotion"
        echo "🎉 Safe for public App Store/Play Store release"
        
        # Generate deployment readiness report
        cat > deployment_readiness_report.md << EOF
# 📱 Mobile Store Deployment Readiness Report

**Status**: ✅ **APPROVED FOR PRODUCTION**  
**Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
**Validation Pipeline**: PASSED

## ✅ Validation Results

### Security & Compliance
- [x] Security hardening tests passed
- [x] TikTok ingestion fully disabled (410 responses)
- [x] Privacy manifest compliance validated
- [x] Payment webhook HMAC verification working
- [x] Signed URL TTL policies enforced (≤15min default)

### API Health Validation
- [x] Health endpoints responding correctly
- [x] Daily horoscopes public API functional
- [x] Authentication flows properly secured
- [x] Metadata endpoints returning valid data

### Store Readiness
- [x] iOS PrivacyInfo.xcprivacy validated against actual data flows
- [x] Android Data Safety questionnaire alignment confirmed
- [x] Screenshot specifications documented
- [x] Synthetic probes configured for post-deployment monitoring

## 🚀 Deployment Approval

**The SAMIA-TAROT mobile application is approved for:**
- TestFlight Beta distribution ✅
- Google Play Internal Testing ✅
- Production store submission ✅

**Next Steps:**
1. Submit to TestFlight for beta review
2. Deploy to Google Play Internal track
3. Monitor synthetic probes post-deployment
4. Proceed with public store release after beta validation

---
*Generated by Store Validation Pipeline - $(date)*
EOF
        
        echo "📄 Deployment readiness report generated: deployment_readiness_report.md"
        exit 0
    else
        echo "❌ STORE DEPLOYMENT VALIDATION FAILED"
        echo "🚨 Fix validation issues before mobile release"
        echo "📋 Review individual test outputs above for details"
        exit 1
    fi
}

# Run with verbose output
set -x
main "$@"