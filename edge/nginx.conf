# SAMIA-TAROT Hardened Nginx Reverse Proxy Configuration
# Production-ready edge security for FastAPI backend

# Environment variable for job token validation
env JOB_TOKEN;

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_general:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=api_orders:10m rate=20r/m;
limit_req_zone $binary_remote_addr zone=api_verify:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=api_assist:10m rate=60r/m;

# Upstream FastAPI server
upstream samia_backend {
    server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Security headers map
map $sent_http_content_type $csp_header {
    default "default-src 'none'; connect-src 'self' https://<API_DOMAIN> https://<SUPABASE_URL>; media-src https://<SUPABASE_URL>; img-src 'self' data:; style-src 'self' 'unsafe-inline'; frame-ancestors 'none'; base-uri 'none'";
}

# CORS origin validation
map $http_origin $cors_origin {
    default "";
    "https://<PRIMARY_WEB_ORIGIN>" $http_origin;
    "https://<ADMIN_ORIGIN>" $http_origin;
}

server {
    listen 80;
    server_name <API_DOMAIN>;
    
    # Force HTTPS redirect
    location / {
        return 301 https://$server_name$request_uri;
    }
    
    # ACME challenge exception
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl http2;
    server_name <API_DOMAIN>;
    
    # SSL Configuration (certificates managed separately)
    ssl_certificate /etc/ssl/certs/<API_DOMAIN>.crt;
    ssl_certificate_key /etc/ssl/private/<API_DOMAIN>.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Request limits and timeouts
    client_max_body_size 25m;
    client_body_timeout 20s;
    client_header_timeout 20s;
    send_timeout 20s;
    keepalive_timeout 15s;
    
    # Proxy timeouts
    proxy_read_timeout 30s;
    proxy_send_timeout 30s;
    proxy_connect_timeout 10s;
    
    # Security headers (always applied)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Permissions-Policy "microphone=(), camera=(), geolocation=()" always;
    add_header Content-Security-Policy $csp_header always;
    
    # CORS headers (conditional)
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-User-ID, X-Job-Token" always;
    add_header Access-Control-Max-Age "600" always;
    add_header Vary "Origin" always;
    
    # Bot detection and blocking
    if ($http_user_agent ~* (sqlmap|nmap|nikto|wpscan|gobuster|masscan)) {
        return 403;
    }
    
    # Block non-allowed methods
    if ($request_method !~ ^(GET|POST|OPTIONS)$) {
        return 405;
    }
    
    # CORS preflight handling
    location / {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # Default cache control
        add_header Cache-Control "private, no-store, max-age=0" always;
        
        # Rate limiting
        limit_req zone=api_general burst=10 nodelay;
        
        # Proxy to backend
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Metadata endpoints - cacheable
    location ~ ^/api/meta/ {
        add_header Cache-Control "public, max-age=60" always;
        limit_req zone=api_general burst=20 nodelay;
        
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Daily horoscopes - no cache, private
    location ~ ^/api/horoscopes/daily {
        add_header Cache-Control "private, max-age=0, no-store" always;
        limit_req zone=api_general burst=5 nodelay;
        
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Orders endpoints - stricter rate limiting
    location ~ ^/api/orders {
        add_header Cache-Control "private, no-store, max-age=0" always;
        limit_req zone=api_orders burst=5 nodelay;
        
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Verification endpoints - limited rate
    location ~ ^/api/verify/ {
        add_header Cache-Control "private, no-store, max-age=0" always;
        limit_req zone=api_verify burst=3 nodelay;
        
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # AI assist endpoints - moderate rate limiting
    location ~ ^/api/assist/ {
        add_header Cache-Control "private, no-store, max-age=0" always;
        limit_req zone=api_assist burst=10 nodelay;
        
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Ops endpoints - job token required + IP restrictions
    location ~ ^/api/ops/ {
        # Job token validation
        if ($http_x_job_token != $JOB_TOKEN) {
            return 403;
        }
        
        # Optional: IP allowlist (uncomment and configure for production)
        # allow 1.2.3.4;    # Admin office IP
        # allow 5.6.7.8;    # Monitoring server IP
        # deny all;
        
        add_header Cache-Control "private, no-store, max-age=0" always;
        limit_req zone=api_general burst=5 nodelay;
        
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Cron endpoints - job token required + IP restrictions
    location ~ ^/api/cron/ {
        # Job token validation
        if ($http_x_job_token != $JOB_TOKEN) {
            return 403;
        }
        
        # Optional: IP allowlist (uncomment and configure for production)
        # allow 1.2.3.4;    # Cron server IP
        # deny all;
        
        add_header Cache-Control "private, no-store, max-age=0" always;
        limit_req zone=api_general burst=2 nodelay;
        
        proxy_pass http://samia_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Access logging (JSON format)
    access_log /var/log/nginx/samia-access.log combined;
    error_log /var/log/nginx/samia-error.log warn;
}

# Configuration notes:
# 1. Replace placeholders: <API_DOMAIN>, <PRIMARY_WEB_ORIGIN>, <ADMIN_ORIGIN>, <SUPABASE_URL>
# 2. Set JOB_TOKEN environment variable: export JOB_TOKEN="your-secure-token"
# 3. Configure SSL certificates in appropriate paths
# 4. Uncomment and configure IP allowlists for ops/cron endpoints in production
# 5. Test configuration: nginx -t
# 6. Reload: systemctl reload nginx